name: ${COMPOSE_PROJECT_NAME}

services:
  web:
    build:
      context: "web"
      dockerfile: Dockerfile
    ports:
      - ${WEB_SERVER_PORT}:${WEB_SERVER_PORT}
    networks:
      - private
    depends_on:
      api:
        condition: service_started
  api:
    build:
      context: "api"
      dockerfile: Dockerfile
    environment:
      DB_HOST: db
      DB_USER_NAME: ${DB_USER_NAME}
      DB_USER_PASSWORD: ${DB_USER_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      API_SERVER_PORT: ${API_SERVER_PORT}
      API_VERSION: ${API_VERSION}
      SERVICE_NAME: ${SERVICE_NAME}
    ports:
      - ${API_SERVER_PORT}:${API_SERVER_PORT}
    networks:
      - private
    depends_on:
      db:
        condition: service_started

  db:
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER_NAME}
      POSTGRES_PASSWORD: ${DB_USER_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - private

volumes:
  postgres:
networks:
  private:
